version: '3.8'

services:
  academic-rag-assistant:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: academic-rag-assistant
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      # Streamlit configuration
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true
      
      # Python configuration
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      
      # Application configuration
      - LOG_LEVEL=INFO
      
      # OpenAI API key (optional - can be entered in UI)
      # - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      
    volumes:
      # Persistent data storage
      - rag_data:/app/data
      - rag_logs:/app/logs
      - rag_cache:/app/cache
      
      # Optional: Mount config for customization
      # - ./configs:/app/configs:ro
      
    networks:
      - rag-network
      
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G
          
    # Security options
    security_opt:
      - no-new-privileges:true
      
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: rag-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates
    depends_on:
      - academic-rag-assistant
    networks:
      - rag-network
    profiles:
      - production

volumes:
  rag_data:
    driver: local
  rag_logs:
    driver: local
  rag_cache:
    driver: local

networks:
  rag-network:
    driver: bridge
